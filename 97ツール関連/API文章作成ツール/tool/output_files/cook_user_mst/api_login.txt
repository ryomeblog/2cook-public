## 概要
SpringSecurityの認証機能を利用してログイン処理を行う。

## 処理詳細
1. リクエストパラメータチェックを行う。

   | No | パラメータ | 説明       | 型     | 文字種     | 必須 | デフォルト値 | 最小文字数 | 最大文字数 | パターン |
   |----|------------|------------|--------|------------|------|--------------|------------|------------|----------|
   | 1  | userId     | ユーザID    | String | 半角英数字 | ○    | -            | 12          | 12         | -        |
   | 2  | password   | パスワード | String | 半角英文字   | ○    | -            | 1          | 20         | -        |

2. 「cook_user_mst」テーブルからリクエストパラメータのユーザIDを検索条件に該当レコードを取得する。
   * 「cook_user_mst」テーブルに該当レコードがなかった場合は404エラーとする。
   * 該当レコードのアカウントロックがTrueの場合は403エラーとする。

3. リクエストパラメータのパスワードと2で取得したレコードのパスワードが一致するか確認する。
   * 一致の場合、以下の通りリクエストパラメータのユーザIDと「cook_user_mst」テーブルのユーザIDが一致するレコードを更新する。

   | 論理名               | 物理名          | 導出元                               |
   | -------------------- | --------------- | ------------------------------------ |
   | ユーザID             | user_id         | 更新しない                           |
   | アカウントロック     | lock            | 0                                    |
   | 更新日時             | update_datetime | 現在日時                             |
   | バージョン           | version         | リクエストパラメータのバージョン + 1 |

   * 不一致の場合、以下の処理をする。
      - 2で取得したログイン失敗回数をカウントアップする。
      - 2で取得したログイン失敗回数が上限を超えた場合、2で取得したログイン失敗回数を0にして、2で取得したアカウントロックをTrueにする。
      - 以下の通りリクエストパラメータのユーザIDと「cook_user_mst」テーブルのユーザIDが一致するレコードを更新する。

   | 論理名               | 物理名          | 導出元                               |
   | -------------------- | --------------- | ------------------------------------ |
   | ユーザID             | user_id         | 更新しない                           |
   | パスワード間違え回数 | error_password  | 2で取得したログイン失敗回数          |
   | アカウントロック     | lock            | 2で取得したアカウントロック          |
   | 更新日時             | update_datetime | 現在日時                             |
   | バージョン           | version         | リクエストパラメータのバージョン + 1 |

4. SpringSecurityの認証処理を行う。
5. 2で取得した「cook_user_mst」テーブルのレコードをレスポンスに設定し、返却する。

## 概要
「cook_user_mst」テーブルから詳細情報を取得し、返却する。
## 処理詳細 
1. ログイン時のユーザIDをキーに「cook_user_mst」テーブルから詳細情報を取得する。
   * 「cook_user_mst」テーブルに該当レコードがなかった場合は404エラーとする。
2. 取得した「cook_user_mst」テーブルの詳細情報をレスポンスに設定し、返却する。
